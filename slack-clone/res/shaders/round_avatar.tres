[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://res/imgs/rounded.svg" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=2]
source = 2

[sub_resource type="VisualShader" id=3]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	COLOR.rgb = n_out3p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -321, 55 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -80, 300 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 20, 120 )
nodes/fragment/connections = PoolIntArray( 2, 1, 0, 1, 3, 0, 0, 0 )

[resource]
resource_local_to_scene = true
render_priority = 1
shader = SubResource( 3 )
